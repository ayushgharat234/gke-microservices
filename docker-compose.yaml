version: '3.9'

services:
  redis: 
    image: redis:latest
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks: 
      - micro-net
    restart: unless-stopped 

  api-gateway:
    build: ./services/api-gateway 
    image: ayushgharat234/api-gateway:latest
    env_file:
      - .env
    ports: 
      - "${API_GATEWAY_PORT}:${API_GATEWAY_PORT}"
    environment:
      - TASK_SERVICE_URL=${TASK_SERVICE_URL}
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - micro-net
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9090/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    restart: unless-stopped 

  task-service:
    build: ./services/task-service
    image: ayushgharat234/task-service:latest
    ports:
      - "${TASK_SERVICE_PORT}:${TASK_SERVICE_PORT}"
    environment:
      - REDIS_ADDR=${REDIS_ADDR}
      - REDIS_PASS=${REDIS_PASS}
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - micro-net
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped 
 
  worker-service:
    build: ./services/worker-service 
    image: ayushgharat234/worker-service:latest
    environment:
      - REDIS_ADDR=${REDIS_ADDR}
      - REDIS_PASS=${REDIS_PASS}
    depends_on:
      redis:
        condition: service_healthy 
      task-service:
        condition: service_healthy 
    networks:
      - micro-net
    restart: unless-stopped 

  notification-service:
    build: ./services/notification-service
    image: ayushgharat234/notification-service:latest
    ports:
      - "${NOTIFICATION_SERVICE_PORT}:${NOTIFICATION_SERVICE_PORT}"
    networks:
      - micro-net
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8083/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped 

networks:
  micro-net:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.name: microservice